name: Deploy To EC2
on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 올린 파일들을 불러오기
        uses: actions/checkout@v4

      - name: JDK 17 버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: 압축하기  # S3에 쉽게 업로드하기 위해 압축
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts


      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: AWS 자격증명 테스트
        run: |
          aws sts get-caller-identity
          aws s3 ls
      

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://instagram-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: |
          aws deploy create-deployment \
            --application-name instagram-server \  # CodeDeploy 애플리케이션 이름
            --deployment-config-name CodeDeployDefault.AllAtOnce \  # 배포 구성 (모든 인스턴스에 한 번에 배포)
            --deployment-group-name Production \  # 배포 그룹 이름
            --s3-location bucket=instagram-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz  # S3 위치 정보